/* Generated By:JavaCC: Do not edit this line. ALPParserTreeConstants.java Version 5.0 */
package lalp.parser.lang;

public interface ALPParserTreeConstants
{
  public int JJTSTART = 0;
  public int JJTTESTBENCH = 1;
  public int JJTRESULTS = 2;
  public int JJTNAME = 3;
  public int JJTCONST = 4;
  public int JJTTYPEDEF = 5;
  public int JJTVOID = 6;
  public int JJTPIN = 7;
  public int JJTVARIABLE = 8;
  public int JJTRESULT = 9;
  public int JJTCOUNTER = 10;
  public int JJTASSIGNMENT = 11;
  public int JJTWHEN = 12;
  public int JJTTESTBENCHWHEN = 13;
  public int JJTFOREACH = 14;
  public int JJTLHS = 15;
  public int JJTRHS = 16;
  public int JJTEXPRESSION = 17;
  public int JJTDELAYEXPRESSION = 18;
  public int JJTCONDITIONALEXPRESSION = 19;
  public int JJTCONDITIONALOREXPRESSION = 20;
  public int JJTCONDITIONALANDEXPRESSION = 21;
  public int JJTINCLUSIVEOREXPRESSION = 22;
  public int JJTEXCLUSIVEOREXPRESSION = 23;
  public int JJTANDEXPRESSION = 24;
  public int JJTEQUALITYEXPRESSION = 25;
  public int JJTRELATIONALEXPRESSION = 26;
  public int JJTSHIFTEXPRESSION = 27;
  public int JJTADDITIVEEXPRESSION = 28;
  public int JJTMULTIPLICATIVEEXPRESSION = 29;
  public int JJTUNARYEXPRESSION = 30;
  public int JJTPREINCREMENTEXPRESSION = 31;
  public int JJTPREDECREMENTEXPRESSION = 32;
  public int JJTUNARYEXPRESSIONNOTPLUSMINUS = 33;
  public int JJTPOSTFIXEXPRESSION = 34;
  public int JJTPRIMARYEXPRESSION = 35;
  public int JJTLITERAL = 36;


  public String[] jjtNodeName = {
    "Start",
    "Testbench",
    "Results",
    "Name",
    "Const",
    "Typedef",
    "void",
    "Pin",
    "Variable",
    "Result",
    "Counter",
    "Assignment",
    "When",
    "TestbenchWhen",
    "Foreach",
    "LHS",
    "RHS",
    "Expression",
    "DelayExpression",
    "ConditionalExpression",
    "ConditionalOrExpression",
    "ConditionalAndExpression",
    "InclusiveOrExpression",
    "ExclusiveOrExpression",
    "AndExpression",
    "EqualityExpression",
    "RelationalExpression",
    "ShiftExpression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "UnaryExpression",
    "PreIncrementExpression",
    "PreDecrementExpression",
    "UnaryExpressionNotPlusMinus",
    "PostfixExpression",
    "PrimaryExpression",
    "Literal",
  };
}
/* JavaCC - OriginalChecksum=875ee955dddb4a53f7543bd26a0af9ad (do not edit this line) */
