/* Copyright (c) 2009 Ricardo Menotti, All Rights Reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its 
 * documentation for NON-COMERCIAL purposes and without fee is hereby granted 
 * provided that this copyright notice appears in all copies.
 *
 * RICARDO MENOTTI MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY
 * OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR 
 * NON-INFRINGEMENT. RICARDO MENOTTI SHALL NOT BE LIABLE FOR ANY DAMAGES 
 * SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THIS 
 * SOFTWARE OR ITS DERIVATIVES. 
 */
 

 /* C code
 
 #define N 10
 
 void control(int op) {
 	int i, a[N], b[N] = {1, 2, 3, ...}, c[N] = {2, 4, 6, ...};
 	for (i=0; i<N; i++) {
		if (op==1)
			a[i]=b[i]+c[i];
		else
			a[i]=b[i]-c[i];
	}
}
 
 */

const DATA_WIDTH = 32;
const ITERATIONS = 10;

typedef fixed(DATA_WIDTH, 1) int;

control(in int op, out int result) {
	{
		int a[4], b[4]={1,2,3}, c[4]={2,4,6};
		int val, i;
	}
	counter (i=0; i<ITERATIONS; i++);
	a.address = i;
	b.address = i;
	c.address = i;
	val = b-c;
	val = b+c when op==1;
	a.data_in = val;
	result = a;
}
