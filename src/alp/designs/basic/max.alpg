/* Copyright (c) 2009 Ricardo Menotti, All Rights Reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its 
 * documentation for NON-COMERCIAL purposes and without fee is hereby granted 
 * provided that this copyright notice appears in all copies.
 *
 * RICARDO MENOTTI MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY
 * OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR 
 * NON-INFRINGEMENT. RICARDO MENOTTI SHALL NOT BE LIABLE FOR ANY DAMAGES 
 * SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THIS 
 * SOFTWARE OR ITS DERIVATIVES. 
 */

const DW = 32;
const SIZE = 2048;

typedef fixed(16,1) int16;
typedef fixed(1,0) bit;

max(in bit init, out bit done, out int16 max) {

	{
		for1:		module_for(11, SIZE);
		and1:		and_op(1);
		ram1:		block_ram(11, DW);
		reg1,reg2:		reg_op(DW);
		d1,d2:		delay_op(1, 2);
		comp:		if_gt_op_s(DW);
	}

	for1 <- init;
	ram1 <- for1;
	d2 <- for1.done;
	d1 <- for1.step;
	reg1 <- ram1;
	and1.I0 <- comp(backward);
	and1.I1 <- d1;
	reg2 <-(maior) reg1;
	reg2.we <- and1;
	comp.I0 <- reg1;
	comp.I1 <- reg2;
	max <- reg2;
	done <- d2;

}